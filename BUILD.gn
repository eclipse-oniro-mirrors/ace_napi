# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

config("ace_napi_config") {
  include_dirs = [
    "//foundation/ace/napi",
    "//foundation/ace/napi/interfaces/kits",
    "//third_party/node/src",
  ]
}

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//build/lite/config/subsystem/aafwk/config.gni")

  config("ace_napi_jerryscript_config") {
    include_dirs = [
      "//foundation/ace/napi",
      "//foundation/ace/napi/native_engine",
      "//foundation/ace/napi/native_engine/impl/jerryscript",
      "//third_party/jerryscript/jerry-ext/include",
      "//third_party/jerryscript/jerry-core/include",
      "//third_party/jerryscript/jerry-port/default/include",
      "//third_party/libuv/include",
    ]
  }

  shared_library("ace_napi") {
    public_configs = [ ":ace_napi_config" ]

    include_dirs = [
      "//third_party/libuv/include",
      "//foundation/ace/napi",
      "//foundation/ace/napi/interfaces/kits",
      "//third_party/node/src",
      "//third_party/bounds_checking_function/include",
    ]

    sources = [
      "module_manager/native_module_manager.cpp",
      "native_engine/native_api.cpp",
      "native_engine/native_async_work.cpp",
      "native_engine/native_engine.cpp",
      "native_engine/native_node_api.cpp",
      "scope_manager/native_scope_manager.cpp",
    ]

    if (target_cpu == "arm64") {
      defines = [ "_ARM64_" ]
    }

    deps = [
      "//base//hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/libuv:uv",
    ]

    cflags = [ "-fPIC" ]
  }

  shared_library("ace_napi_jerryscript") {
    configs -= [ "//build/lite/config:language_cpp" ]

    public_configs = [ ":ace_napi_jerryscript_config" ]

    include_dirs = [
      "//foundation/ace/napi",
      "//foundation/ace/napi/native_engine",
      "//foundation/ace/napi/native_engine/impl/jerryscript",
      "//third_party/jerryscript/jerry-ext/include",
      "//third_party/jerryscript/jerry-core/include",
      "//third_party/jerryscript/jerry-port/default/include",
      "//third_party/libuv/include",
      "//third_party/bounds_checking_function/include",
      "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    ]

    cflags = [ "-fPIC" ]
    cflags_cc = cflags
    cflags_cc += [ "-std=c++14" ]

    ldflags = [
      "-lstdc++",
      "-lpthread",
    ]

    sources = [
      "native_engine/impl/jerryscript/jerryscript_ext.cpp",
      "native_engine/impl/jerryscript/jerryscript_native_deferred.cpp",
      "native_engine/impl/jerryscript/jerryscript_native_engine.cpp",
      "native_engine/impl/jerryscript/jerryscript_native_reference.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_array.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_array_buffer.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_boolean.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_data_view.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_external.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_function.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_number.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_object.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_string.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_typed_array.cpp",
      "native_engine/impl/jerryscript/native_value/jerryscript_native_value.cpp",
    ]

    deps = [
      ":ace_napi",
      "//base//hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/jerryscript/jerry-core:jerry-core_shared",
      "//third_party/jerryscript/jerry-ext:jerry-ext_shared",
      "//third_party/jerryscript/jerry-port/default:jerry-port-default_shared",
    ]
  }
} else {
  import("//ark/js_runtime/js_runtime_config.gni")
  import("//build/ohos.gni")

  config("ace_napi_quickjs_config") {
    include_dirs = [
      "//foundation/ace/napi",
      "//third_party/libuv/include",
      "//third_party/quickjs",
      "//utils/native/base/include",
    ]
  }

  config("ace_napi_ark_config") {
    include_dirs = [
      "//foundation/ace/napi",
      "//third_party/libuv/include",
      "//utils/native/base/include",
    ]
  }

  ohos_shared_library("ace_napi") {
    public_configs = [ ":ace_napi_config" ]

    include_dirs = [
      "//foundation/ace/napi",
      "//foundation/ace/napi/interfaces/kits",
      "//third_party/libuv/include",
      "//third_party/node/src",
      "//utils/native/base/include",
    ]

    sources = [
      "module_manager/native_module_manager.cpp",
      "native_engine/native_api.cpp",
      "native_engine/native_async_work.cpp",
      "native_engine/native_engine.cpp",
      "native_engine/native_node_api.cpp",
      "scope_manager/native_scope_manager.cpp",
    ]

    if (target_cpu == "arm64") {
      defines = [ "_ARM64_" ]
    }

    deps = [
      "//third_party/libuv:uv_static",
      "//utils/native/base:utilsecurec",
    ]

    cflags_cc = [ "-Wno-missing-braces" ]

    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }

    subsystem_name = "ace"
    part_name = "napi"
  }

  ohos_shared_library("ace_napi_quickjs") {
    public_configs = [ ":ace_napi_quickjs_config" ]

    include_dirs = [
      "//foundation/ace/napi",
      "//foundation/ace/napi/native_engine/impl/quickjs",
      "//third_party/libuv/include",
      "//third_party/quickjs",
      "//utils/native/base/include",
    ]

    sources = [
      "native_engine/impl/quickjs/native_value/quickjs_native_array.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_array_buffer.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_boolean.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_data_view.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_external.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_function.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_number.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_object.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_string.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_typed_array.cpp",
      "native_engine/impl/quickjs/native_value/quickjs_native_value.cpp",
      "native_engine/impl/quickjs/quickjs_ext.cpp",
      "native_engine/impl/quickjs/quickjs_native_deferred.cpp",
      "native_engine/impl/quickjs/quickjs_native_engine.cpp",
      "native_engine/impl/quickjs/quickjs_native_reference.cpp",
    ]

    deps = [
      ":ace_napi",
      "//third_party/quickjs:qjs",
    ]

    cflags_cc = [ "-Wno-missing-braces" ]

    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }

    subsystem_name = "ace"
    part_name = "napi"
  }

  ohos_shared_library("ace_napi_ark") {
    public_configs = [ ":ace_napi_ark_config" ]

    configs = [ "//ark/js_runtime:ark_jsruntime_public_config" ]

    include_dirs = [
      "//foundation/ace/napi",
      "//foundation/ace/napi/native_engine",
      "//foundation/ace/napi/native_engine/impl/ark",
      "//third_party/libuv/include",
      "//utils/native/base/include",
    ]

    defines = [ "USE_ARK_ENGINE" ]

    if (target_cpu == "arm64") {
      defines += [ "APP_USE_ARM64" ]
    } else if (target_cpu == "arm") {
      defines += [ "APP_USE_ARM" ]
    }

    sources = [
      "native_engine/impl/ark/ark_native_deferred.cpp",
      "native_engine/impl/ark/ark_native_engine.cpp",
      "native_engine/impl/ark/ark_native_reference.cpp",
      "native_engine/impl/ark/native_value/ark_native_array.cpp",
      "native_engine/impl/ark/native_value/ark_native_array_buffer.cpp",
      "native_engine/impl/ark/native_value/ark_native_boolean.cpp",
      "native_engine/impl/ark/native_value/ark_native_data_view.cpp",
      "native_engine/impl/ark/native_value/ark_native_external.cpp",
      "native_engine/impl/ark/native_value/ark_native_function.cpp",
      "native_engine/impl/ark/native_value/ark_native_number.cpp",
      "native_engine/impl/ark/native_value/ark_native_object.cpp",
      "native_engine/impl/ark/native_value/ark_native_string.cpp",
      "native_engine/impl/ark/native_value/ark_native_typed_array.cpp",
      "native_engine/impl/ark/native_value/ark_native_value.cpp",
    ]
    deps = [
      ":ace_napi",
      "//ark/js_runtime:libark_jsruntime",
    ]

    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }

    subsystem_name = "ace"
    part_name = "napi"
  }

  group("napi_packages") {
    deps = [
      ":ace_napi",
      ":ace_napi_ark",
      ":ace_napi_quickjs",
    ]
  }

  group("napi_packages_test") {
    testonly = true

    deps = [
      "sample/native_module_demo:demo",
      "sample/native_module_netserver:netserver",
      "sample/native_module_storage:storage",
      "test/unittest:unittest",
    ]

    if (is_standard_system) {
      deps += [ "sample/native_module_ability:ability" ]
    }
  }
}
